From: Ulrich Kunitz <kune@deine-taler.de>
Date: Wed, 13 Sep 2006 01:42:12 +0000 (+0100)
Subject: [PATCH] zd1211rw: Added workqueue
X-Git-Url: http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=bc5f06a8aaa29a79c9da2cedb5b9779b8081289c

[PATCH] zd1211rw: Added workqueue

For housekeeping and watchdog tasks a workqueue is created. The
central workqueue is not used to prevent crashes creates by bugs.
It might be changed, when the housekeeping is stabilized.

Signed-off-by: Ulrich Kunitz <kune@deine-taler.de>
Signed-off-by: Daniel Drake <dsd@gentoo.org>
Signed-off-by: John W. Linville <linville@tuxdriver.com>
---

Index: linux-2.6.18/drivers/net/wireless/zd1211rw/zd_usb.c
===================================================================
--- linux-2.6.18.orig/drivers/net/wireless/zd1211rw/zd_usb.c	2006-10-02 00:33:39.000000000 +0200
+++ linux-2.6.18/drivers/net/wireless/zd1211rw/zd_usb.c	2006-10-02 00:35:01.000000000 +0200
@@ -23,6 +23,7 @@
 #include <linux/errno.h>
 #include <linux/skbuff.h>
 #include <linux/usb.h>
+#include <linux/workqueue.h>
 #include <net/ieee80211.h>
 
 #include "zd_def.h"
@@ -1010,12 +1011,20 @@
 	.disconnect	= disconnect,
 };
 
+struct workqueue_struct *zd_workqueue;
+
 static int __init usb_init(void)
 {
 	int r;
 
 	pr_debug("usb_init()\n");
 
+	zd_workqueue = create_singlethread_workqueue(driver.name);
+	if (zd_workqueue == NULL) {
+		printk(KERN_ERR "%s: couldn't create workqueue\n", driver.name);
+		return -ENOMEM;
+	}
+
 	r = usb_register(&driver);
 	if (r) {
 		printk(KERN_ERR "usb_register() failed. Error number %d\n", r);
@@ -1030,6 +1039,7 @@
 {
 	pr_debug("usb_exit()\n");
 	usb_deregister(&driver);
+	destroy_workqueue(zd_workqueue);
 }
 
 module_init(usb_init);
Index: linux-2.6.18/drivers/net/wireless/zd1211rw/zd_usb.h
===================================================================
--- linux-2.6.18.orig/drivers/net/wireless/zd1211rw/zd_usb.h	2006-09-20 05:42:06.000000000 +0200
+++ linux-2.6.18/drivers/net/wireless/zd1211rw/zd_usb.h	2006-10-02 00:35:01.000000000 +0200
@@ -237,4 +237,6 @@
 
 int zd_usb_rfwrite(struct zd_usb *usb, u32 value, u8 bits);
 
+extern struct workqueue_struct *zd_workqueue;
+
 #endif /* _ZD_USB_H */
