--- linux-orig/include/linux/mtd/doc2000.h	2006-02-23 05:43:34.000000000 +0100
+++ linux-ixp4xx/include/linux/mtd/doc2000.h	2006-02-23 10:44:54.000000000 +0100
@@ -79,9 +79,20 @@
 /* How to access the device?
  * On ARM, it'll be mmap'd directly with 32-bit wide accesses.
  * On PPC, it's mmap'd and 16-bit wide.
+ * On DS101 (an ARM device), some tricks are needed
  * Others use readb/writeb
  */
-#if defined(__arm__)
+#if defined(MACH_DS101) && !defined(BIG_ENDIAN)
+#define ReadDOC_(adr, reg)      readw((unsigned long)(adr + reg) ^ 0x02)
+#define WriteDOC_(d, adr, reg)  writew(d, (unsigned long)(adr + reg) ^ 0x02)
+#define DOC_IOREMAP_LEN 0x4000
+#endif
+#if defined(MACH_DS101) && defined(BIG_ENDIAN)
+#define ReadDOC_(adr, reg)      swab16(readw((void __iomem *)(adr) + (reg)))
+#define WriteDOC_(d, adr, reg)  writew(swab16(d), (void __iomem *)(adr) + (reg))
+#define DOC_IOREMAP_LEN 0x4000
+#endif
+#if defined(__arm__) && !defined(MACH_DS101)
 #define ReadDOC_(adr, reg)      ((unsigned char)(*(volatile __u32 *)(((unsigned long)adr)+((reg)<<2))))
 #define WriteDOC_(d, adr, reg)  do{ *(volatile __u32 *)(((unsigned long)adr)+((reg)<<2)) = (__u32)d; wmb();} while(0)
 #define DOC_IOREMAP_LEN 0x8000
