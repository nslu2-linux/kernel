Index: linux-2.6.20-rc1/arch/arm/mach-ixp4xx/common.c
===================================================================
--- linux-2.6.20-rc1.orig/arch/arm/mach-ixp4xx/common.c	2006-12-17 16:33:45.106161462 +0000
+++ linux-2.6.20-rc1/arch/arm/mach-ixp4xx/common.c	2006-12-17 16:34:36.961402214 +0000
@@ -442,13 +442,6 @@
 	.resource       = res_qmgr,
 };
 
-static struct platform_device *npes_qmgr[] __initdata = {
-	&qmgr,
-	&dev_npea,
-	&dev_npeb,
-	&dev_npec,
-};
-
 unsigned long ixp4xx_exp_bus_size;
 EXPORT_SYMBOL(ixp4xx_exp_bus_size);
 
@@ -473,7 +466,15 @@
 		npeb.inst_size = 0x1000;
 		npec.inst_size = 0x1000;
 	}
-	platform_add_devices(npes_qmgr, ARRAY_SIZE(npes_qmgr));
+
+	platform_device_register(&qmgr);
+
+	if (ix_fuse() & IX_FUSE_NPEA)
+		platform_device_register(&dev_npea);
+	if (ix_fuse() & IX_FUSE_NPEB)
+		platform_device_register(&dev_npeb);
+	if (ix_fuse() & IX_FUSE_NPEC)
+		platform_device_register(&dev_npec);
 
 	printk("IXP4xx: Using %luMiB expansion bus window size\n",
 			ixp4xx_exp_bus_size >> 20);
Index: linux-2.6.20-rc1/drivers/net/ixp4xx/mac.h
===================================================================
--- linux-2.6.20-rc1.orig/drivers/net/ixp4xx/mac.h	2006-12-17 16:33:45.110161713 +0000
+++ linux-2.6.20-rc1/drivers/net/ixp4xx/mac.h	2006-12-17 16:34:36.965402465 +0000
@@ -12,7 +12,6 @@
 #include <asm/hardware.h>
 #include <linux/ixp_qmgr.h>
 
-
 /* 32 bit offsets to be added to u32 *pointers */
 #define MAC_TX_CNTRL1       0x00  // 0x000
 #define MAC_TX_CNTRL2       0x01  // 0x004
@@ -157,6 +156,7 @@
 	int rxq_pkt;
 	int unloading;
 	struct mac_plat_info *plat;
+	int npe_stat_num;
 };
 
 static inline void mac_write_reg(struct mac_info *mac, int offset, u32 val)
@@ -219,3 +219,43 @@
 	MAC_UNI_ADDR +3, MAC_UNI_ADDR +4, MAC_UNI_ADDR +5, \
 	MAC_CORE_CNTRL \
 }
+
+#define NPE_STAT_NUM 34
+#define NPE_STAT_NUM_BASE 22
+#define NPE_STAT_STRINGS \
+	{"StatsAlignmentErrors          "}, \
+	{"StatsFCSErrors                "}, \
+	{"StatsInternalMacReceiveErrors "}, \
+	{"RxOverrunDiscards             "}, \
+	{"RxLearnedEntryDiscards        "}, \
+	{"RxLargeFramesDiscards         "}, \
+	{"RxSTPBlockedDiscards          "}, \
+	{"RxVLANTypeFilterDiscards      "}, \
+	{"RxVLANIdFilterDiscards        "}, \
+	{"RxInvalidSourceDiscards       "}, \
+	{"RxBlackListDiscards           "}, \
+	{"RxWhiteListDiscards           "}, \
+	{"RxUnderflowEntryDiscards      "}, \
+	{"StatsSingleCollisionFrames    "}, \
+	{"StatsMultipleCollisionFrames  "}, \
+	{"StatsDeferredTransmissions    "}, \
+	{"StatsLateCollisions           "}, \
+	{"StatsExcessiveCollsions       "}, \
+	{"StatsInternalMacTransmitErrors"}, \
+	{"StatsCarrierSenseErrors       "}, \
+	{"TxLargeFrameDiscards          "}, \
+	{"TxVLANIdFilterDiscards        "}, \
+\
+	{"RxValidFramesTotalOctets      "}, \
+	{"RxUcastPkts                   "}, \
+	{"RxBcastPkts                   "}, \
+	{"RxMcastPkts                   "}, \
+	{"RxPkts64Octets                "}, \
+	{"RxPkts65to127Octets           "}, \
+	{"RxPkts128to255Octets          "}, \
+	{"RxPkts256to511Octets          "}, \
+	{"RxPkts512to1023Octets         "}, \
+	{"RxPkts1024to1518Octets        "}, \
+	{"RxInternalNPEReceiveErrors    "}, \
+	{"TxInternalNPETransmitErrors   "}
+
Index: linux-2.6.20-rc1/drivers/net/ixp4xx/mac_driver.c
===================================================================
--- linux-2.6.20-rc1.orig/drivers/net/ixp4xx/mac_driver.c	2006-12-17 16:33:45.114161963 +0000
+++ linux-2.6.20-rc1/drivers/net/ixp4xx/mac_driver.c	2006-12-17 16:34:36.965402465 +0000
@@ -15,6 +15,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/err.h>
+#include <linux/dma-mapping.h>
 #include <asm/io.h>
 #include <asm/irq.h>
 
@@ -103,6 +104,17 @@
 	return 0;
 }
 
+static void get_npe_stats(struct mac_info *mac, u32 *buf, int len, int reset)
+{
+	struct npe_info *npe = dev_get_drvdata(mac->npe_dev);
+	u32 phys;
+
+	memset(buf, len, 0);
+	phys = dma_map_single(mac->npe_dev, buf, len, DMA_BIDIRECTIONAL);
+	npe_mh_get_stats(npe, mac->plat, phys, reset);
+	dma_unmap_single(mac->npe_dev, phys, len, DMA_BIDIRECTIONAL);
+}
+
 static void irqcb_recv(struct qm_queue *queue)
 {
 	struct net_device *dev;
@@ -176,6 +188,7 @@
 {
 	struct mac_info *mac = netdev_priv(dev);
 	struct npe_info *npe = dev_get_drvdata(mac->npe_dev);
+	u32 buf[NPE_STAT_NUM];
 	int i;
 
 	/* first check if Microcode was downloaded into this NPE */
@@ -191,6 +204,18 @@
 
 	mac_init(mac);
 	npe_mh_set_rxqid(npe, mac->plat, RX_DONE_QID);
+	get_npe_stats(mac, buf, sizeof(buf), 1); /* reset stats */
+	get_npe_stats(mac, buf, sizeof(buf), 0);
+	/*
+	 * if the extended stats contain random values
+	 * the NPE image lacks extendet statistic counters
+	 */
+	for (i=NPE_STAT_NUM_BASE; i<NPE_STAT_NUM; i++) {
+		if (buf[i] >10000)
+			break;
+	}
+	mac->npe_stat_num = i<NPE_STAT_NUM ? NPE_STAT_NUM_BASE : NPE_STAT_NUM;
+
 	mac_set_uniaddr(dev);
 
 	media_check(dev, 1);
@@ -324,6 +349,37 @@
 	}
 }
 
+static struct {
+	const char str[ETH_GSTRING_LEN];
+} ethtool_stats_keys[NPE_STAT_NUM] = {
+	NPE_STAT_STRINGS
+};
+static void ixmac_get_strings(struct net_device *dev, u32 stringset, u8 *data)
+{
+	struct mac_info *mac = netdev_priv(dev);
+	memcpy(data, ethtool_stats_keys, mac->npe_stat_num * ETH_GSTRING_LEN);
+}
+
+static int ixmac_get_stats_count(struct net_device *dev)
+{
+	struct mac_info *mac = netdev_priv(dev);
+	return mac->npe_stat_num;
+}
+
+static void ixmac_get_ethtool_stats(struct net_device *dev,
+		struct ethtool_stats *stats, u64 *data)
+{
+	int i;
+	struct mac_info *mac = netdev_priv(dev);
+	u32 buf[NPE_STAT_NUM];
+
+	get_npe_stats(mac, buf, sizeof(buf), 0);
+
+	for (i=0; i<stats->n_stats; i++) {
+		data[i] = npe_to_cpu32(buf[i]);
+	}
+}
+
 static struct ethtool_ops ixmac_ethtool_ops = {
 	.get_drvinfo		= ixmac_get_drvinfo,
 	.get_settings		= ixmac_get_settings,
@@ -333,7 +389,11 @@
 	.get_regs_len		= ixmac_get_regs_len,
 	.get_regs		= ixmac_get_regs,
 	.get_perm_addr		= ethtool_op_get_perm_addr,
+	.get_strings		= ixmac_get_strings,
+	.get_stats_count	= ixmac_get_stats_count,
+	.get_ethtool_stats	= ixmac_get_ethtool_stats,
 };
+
 static void mac_mdio_thread (void *_data)
 {
 	struct net_device *dev = _data;
@@ -419,6 +479,8 @@
 	}
 
 	mac->plat = plat;
+	mac->npe_stat_num = NPE_STAT_NUM_BASE;
+
 	platform_set_drvdata(pdev, dev);
 
 	mac_write_reg(mac, MAC_CORE_CNTRL, CORE_RESET);
@@ -434,9 +496,14 @@
 	 * following commands:
 	 * "ip link set address 02:03:04:04:04:01 dev eth0"
 	 * "ifconfig eth0 hw ether 02:03:04:04:04:07"
-	 */
-	random_ether_addr(dev->dev_addr);
-	dev->dev_addr[5] = plat->phy_id;
+	*/
+
+	if (is_zero_ether_addr(plat->hwaddr)) {
+		random_ether_addr(dev->dev_addr);
+		dev->dev_addr[5] = plat->phy_id;
+	}
+	else
+		memcpy(dev->dev_addr, plat->hwaddr, 6);
 
 	printk(KERN_INFO IXMAC_NAME " driver " IXMAC_VERSION
 			": %s on %s with PHY[%d] initialized\n",
Index: linux-2.6.20-rc1/drivers/net/ixp4xx/npe_mh.c
===================================================================
--- linux-2.6.20-rc1.orig/drivers/net/ixp4xx/npe_mh.c	2006-12-17 16:33:45.114161963 +0000
+++ linux-2.6.20-rc1/drivers/net/ixp4xx/npe_mh.c	2006-12-17 16:34:36.965402465 +0000
@@ -71,6 +71,8 @@
 #define MAC  2
 
 #define IX_ETHNPE_EDB_SETPORTADDRESS            0x01
+#define IX_ETHNPE_GETSTATS			0x04
+#define IX_ETHNPE_RESETSTATS			0x05
 #define IX_ETHNPE_FW_SETFIREWALLMODE            0x0E
 #define IX_ETHNPE_VLAN_SETRXQOSENTRY            0x0B
 #define IX_ETHNPE_SETLOOPBACK_MODE		0x12
@@ -131,7 +133,21 @@
 	return 0;
 }
 
+int npe_mh_get_stats(struct npe_info *npe, struct mac_plat_info *mp, u32 phys,
+		int reset)
+{
+	struct npe_mh_msg msg;
+	memset(&msg, 0, sizeof(msg));
+	msg.u.byte[CMD] = reset ? IX_ETHNPE_RESETSTATS : IX_ETHNPE_GETSTATS;
+	msg.u.byte[PORT] = logical_id(mp);
+	msg.u.data[1] = cpu_to_npe32(cpu_to_be32(phys));
+
+	return send_message(npe, &msg);
+}
+
+
 EXPORT_SYMBOL(npe_mh_setportaddr);
 EXPORT_SYMBOL(npe_mh_disable_firewall);
 EXPORT_SYMBOL(npe_mh_set_rxqid);
 EXPORT_SYMBOL(npe_mh_npe_loopback_mode);
+EXPORT_SYMBOL(npe_mh_get_stats);
Index: linux-2.6.20-rc1/include/asm-arm/arch-ixp4xx/ixp4xx-regs.h
===================================================================
--- linux-2.6.20-rc1.orig/include/asm-arm/arch-ixp4xx/ixp4xx-regs.h	2006-12-17 16:33:45.118162213 +0000
+++ linux-2.6.20-rc1/include/asm-arm/arch-ixp4xx/ixp4xx-regs.h	2006-12-17 16:34:36.965402465 +0000
@@ -46,6 +46,12 @@
  */
 
 /*
+ * PCI Memory Space
+ */
+#define IXP4XX_PCIMEM_BASE_PHYS		(0x48000000)
+#define IXP4XX_PCIMEM_REGION_SIZE	(0x04000000)
+#define IXP4XX_PCIMEM_BAR_SIZE		(0x01000000)
+/*
  * Queue Manager
  */
 #define IXP4XX_QMGR_BASE_PHYS		(0x60000000)
@@ -324,7 +330,13 @@
 #define PCI_ATPDMA0_LENADDR_OFFSET  0x48
 #define PCI_ATPDMA1_AHBADDR_OFFSET  0x4C
 #define PCI_ATPDMA1_PCIADDR_OFFSET  0x50
-#define PCI_ATPDMA1_LENADDR_OFFSET	0x54
+#define PCI_ATPDMA1_LENADDR_OFFSET  0x54
+#define PCI_PTADMA0_AHBADDR_OFFSET  0x58
+#define PCI_PTADMA0_PCIADDR_OFFSET  0x5c
+#define PCI_PTADMA0_LENADDR_OFFSET  0x60
+#define PCI_PTADMA1_AHBADDR_OFFSET  0x64
+#define PCI_PTADMA1_PCIADDR_OFFSET  0x68
+#define PCI_PTADMA1_LENADDR_OFFSET  0x6c
 
 /*
  * PCI Control/Status Registers
@@ -353,6 +365,12 @@
 #define PCI_ATPDMA1_AHBADDR     IXP4XX_PCI_CSR(PCI_ATPDMA1_AHBADDR_OFFSET)
 #define PCI_ATPDMA1_PCIADDR     IXP4XX_PCI_CSR(PCI_ATPDMA1_PCIADDR_OFFSET)
 #define PCI_ATPDMA1_LENADDR     IXP4XX_PCI_CSR(PCI_ATPDMA1_LENADDR_OFFSET)
+#define PCI_PTADMA0_AHBADDR     IXP4XX_PCI_CSR(PCI_PTADMA0_AHBADDR_OFFSET)
+#define PCI_PTADMA0_PCIADDR     IXP4XX_PCI_CSR(PCI_PTADMA0_PCIADDR_OFFSET)
+#define PCI_PTADMA0_LENADDR     IXP4XX_PCI_CSR(PCI_PTADMA0_LENADDR_OFFSET)
+#define PCI_PTADMA1_AHBADDR     IXP4XX_PCI_CSR(PCI_PTADMA1_AHBADDR_OFFSET)
+#define PCI_PTADMA1_PCIADDR     IXP4XX_PCI_CSR(PCI_PTADMA1_PCIADDR_OFFSET)
+#define PCI_PTADMA1_LENADDR     IXP4XX_PCI_CSR(PCI_PTADMA1_LENADDR_OFFSET)
 
 /*
  * PCI register values and bit definitions 
@@ -609,6 +627,34 @@
 
 #define DCMD_LENGTH	0x01fff		/* length mask (max = 8K - 1) */
 
+
+/* Fuse Bits of IXP_EXP_CFG2 */
+#define IX_FUSE_RCOMP   (1 << 0)
+#define IX_FUSE_USB     (1 << 1)
+#define IX_FUSE_HASH    (1 << 2)
+#define IX_FUSE_AES     (1 << 3)
+#define IX_FUSE_DES     (1 << 4)
+#define IX_FUSE_HDLC    (1 << 5)
+#define IX_FUSE_AAL     (1 << 6)
+#define IX_FUSE_HSS     (1 << 7)
+#define IX_FUSE_UTOPIA  (1 << 8)
+#define IX_FUSE_ETH0    (1 << 9)
+#define IX_FUSE_ETH1    (1 << 10)
+#define IX_FUSE_NPEA    (1 << 11)
+#define IX_FUSE_NPEB    (1 << 12)
+#define IX_FUSE_NPEC    (1 << 13)
+#define IX_FUSE_PCI     (1 << 14)
+#define IX_FUSE_ECC     (1 << 15)
+#define IX_FUSE_UTOPIA_PHY_LIMIT  (3 << 16)
+#define IX_FUSE_USB_HOST          (1 << 18)
+#define IX_FUSE_NPEA_ETH          (1 << 19)
+#define IX_FUSE_NPEB_ETH          (1 << 20)
+#define IX_FUSE_RSA               (1 << 21)
+#define IX_FUSE_XSCALE_MAX_FREQ   (3 << 22)
+
+#define IX_FUSE_IXP46X_ONLY IX_FUSE_XSCALE_MAX_FREQ | IX_FUSE_RSA | \
+	IX_FUSE_NPEB_ETH | IX_FUSE_NPEA_ETH | IX_FUSE_USB_HOST | IX_FUSE_ECC
+
 #ifndef __ASSEMBLY__
 static inline int cpu_is_ixp46x(void)
 {
@@ -622,6 +668,15 @@
 #endif
 	return 0;
 }
+
+static inline int ix_fuse(void)
+{
+	unsigned int fuses = ~(*IXP4XX_EXP_CFG2);
+	if (!cpu_is_ixp46x())
+		fuses &= ~IX_FUSE_IXP46X_ONLY;
+
+	return fuses;
+}
 #endif
 
 #endif
Index: linux-2.6.20-rc1/include/asm-arm/arch-ixp4xx/platform.h
===================================================================
--- linux-2.6.20-rc1.orig/include/asm-arm/arch-ixp4xx/platform.h	2006-12-17 16:33:45.118162213 +0000
+++ linux-2.6.20-rc1/include/asm-arm/arch-ixp4xx/platform.h	2006-12-17 16:39:21.163163712 +0000
@@ -100,6 +100,7 @@
        int phy_id;     /* ID of the connected PHY (PCB/platform dependent) */
        int rxq_id;     /* Queue ID of the RX-free q*/
        int txq_id;     /* Where to push the outgoing packets */
+       unsigned char hwaddr[6]; /* Desired hardware address */
 };
 
 /*
Index: linux-2.6.20-rc1/include/linux/ixp_npe.h
===================================================================
--- linux-2.6.20-rc1.orig/include/linux/ixp_npe.h	2006-12-17 16:33:45.118162213 +0000
+++ linux-2.6.20-rc1/include/linux/ixp_npe.h	2006-12-17 16:34:36.973402962 +0000
@@ -81,5 +81,7 @@
 npe_mh_set_rxqid(struct npe_info *npe, struct mac_plat_info *mp, int qid);
 extern int
 npe_mh_npe_loopback_mode(struct npe_info *npe, struct mac_plat_info *mp, int enable);
+extern int
+npe_mh_get_stats(struct npe_info *npe, struct mac_plat_info *mp, u32 phys, int reset);
 
 #endif
