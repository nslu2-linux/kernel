--- linux-2.6.18.orig/drivers/net/ixp4xx/ucode_dl.c	27 Sep 2006 08:07:19 -0000	1.3
+++ linux-2.6.18/drivers/net/ixp4xx/ucode_dl.c	28 Sep 2006 15:57:45 -0000
@@ -16,6 +16,7 @@
 #include <linux/slab.h>
 #include <linux/firmware.h>
 #include <linux/dma-mapping.h>
+#include <linux/byteorder/swab.h>
 #include <asm/uaccess.h>
 #include <asm/io.h>
 
@@ -24,6 +25,7 @@
 #define IXNPE_VERSION "IXP4XX NPE driver Version 0.1.1"
 
 #define DL_MAGIC 0xfeedf00d
+#define DL_MAGIC_SWAP 0x0df0edfe
 
 #define EOF_BLOCK 0xf
 #define IMG_SIZE(image) (((image)->size * sizeof(u32)) + \
@@ -217,7 +219,11 @@
 			continue;
 		} else if (*ppos == sizeof(struct dl_image)) {
 			void *data;
-			if (u.image->magic != DL_MAGIC) {
+			if (u.image->magic == DL_MAGIC_SWAP) {
+				printk(KERN_INFO "Byteswapped Microcode found\n");
+				u.image->id = swab32(u.image->id);
+				u.image->size = swab32(u.image->size);
+			} else if (u.image->magic != DL_MAGIC) {
 				printk(KERN_INFO "Bad magic:%x\n",
 						u.image->magic);
 				return -EFAULT;
@@ -239,8 +245,15 @@
 		*ppos += len;
 		cbuf += len;
 		if (*ppos == IMG_SIZE(u.image)) {
-			int ret;
+			int ret, i;
 			*ppos = 0;
+			if (u.image->magic == DL_MAGIC_SWAP) {
+				for (i=0; i<u.image->size; i++) {
+					u.image->u.data[i] =
+						swab32(u.image->u.data[i]);
+				}
+				u.image->magic = swab32(u.image->magic);
+			}
 			ret = store_npe_image(u.image, NULL);
 			if (ret) {
 				printk(KERN_INFO "Error in NPE image: %x\n",
@@ -259,7 +272,7 @@
 	const struct firmware *fw_entry;
 	struct npe_info *npe = dev_get_drvdata(dev);
 	struct dl_image *image;
-	int ret=-1;
+	int ret = -1, i;
 
 	if (request_firmware(&fw_entry, npe->plat->name, dev) != 0) {
 		return;
@@ -270,14 +283,28 @@
 		printk(KERN_ERR "Firmware error: too small\n");
 		goto out;
 	}
+	if (image->magic == DL_MAGIC_SWAP) {
+		printk(KERN_INFO "Byteswapped Microcode found\n");
+		image->id = swab32(image->id);
+		image->size = swab32(image->size);
+	} else if (image->magic != DL_MAGIC) {
+		printk(KERN_ERR "Bad magic:%x\n", image->magic);
+		goto out;
+	}
 	if (IMG_SIZE(image) != fw_entry->size) {
 		printk(KERN_ERR "Firmware error: bad size\n");
 		goto out;
 	}
-	if (((be32_to_cpu(image->id) >> 24) & 0xf) != npe->plat->id) {
+	if (((image->id >> 24) & 0xf) != npe->plat->id) {
 		printk(KERN_ERR "NPE id missmatch\n");
 		goto out;
 	}
+	if (image->magic == DL_MAGIC_SWAP) {
+		for (i=0; i<image->size; i++) {
+			image->u.data[i] = swab32(image->u.data[i]);
+		}
+		image->magic = swab32(image->magic);
+	}
 
 	ret = store_npe_image(image, dev);
 out:
