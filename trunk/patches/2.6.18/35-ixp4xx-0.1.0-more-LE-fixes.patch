--- linux-2.6.18.orig/drivers/net/ixp4xx/mac.h	15 Sep 2006 08:18:45 -0000	1.3
+++ linux-2.6.18/drivers/net/ixp4xx/mac.h	27 Sep 2006 07:59:35 -0000
@@ -191,9 +191,8 @@
 {
 	int i;
 	u32 data = 0;
-	u8 *bytes = (u8*)&data;
 	for(i=0; i<4; i++) {
-		bytes[3-i] = mac_read_reg(mac, offset + i) & 0xff;
+		data |= (mac_read_reg(mac, offset + i) & 0xff) << (i*8);
 	}
 	return data;
 }
--- linux-2.6.18.orig/drivers/net/ixp4xx/mac_driver.c	20 Sep 2006 15:07:25 -0000	1.3
+++ linux-2.6.18/drivers/net/ixp4xx/mac_driver.c	27 Sep 2006 07:59:35 -0000
@@ -255,7 +255,11 @@
 	if (!netif_running(dev))
 		return -EINVAL;
 
+
+	if (!try_module_get(THIS_MODULE))
+		return -ENODEV;
 	rc = generic_mii_ioctl(&mac->mii, if_mii(rq), cmd, &duplex_changed);
+	module_put(THIS_MODULE);
 	if (duplex_changed)
 		update_duplex_mode(dev);
 	return rc;
--- linux-2.6.18.orig/drivers/net/ixp4xx/npe_mh.c	7 Sep 2006 14:59:35 -0000	1.1
+++ linux-2.6.18/drivers/net/ixp4xx/npe_mh.c	27 Sep 2006 07:59:35 -0000
@@ -25,13 +25,16 @@
 static int send_message(struct npe_info *npe, struct npe_mh_msg *msg)
 {
 	int i,j;
-	u32 data[2];
+	u32 send[2], recv[2];
+
+	for (i=0; i<2; i++)
+		send[i] = be32_to_cpu(msg->u.data[i]);
 
 	if ((npe_reg_read(npe, IX_NPEDL_REG_OFFSET_STAT) &
 				IX_NPEMH_NPE_STAT_IFNE))
 		return -1;
 
-	npe_reg_write(npe, IX_NPEDL_REG_OFFSET_FIFO, msg->u.data[0]);
+	npe_reg_write(npe, IX_NPEDL_REG_OFFSET_FIFO, send[0]);
 	for(i=0; i<MAX_RETRY; i++) {
 		/* if the IFNF status bit is unset then the inFIFO is full */
 		if (npe_reg_read(npe, IX_NPEDL_REG_OFFSET_STAT) &
@@ -40,7 +43,7 @@
 	}
 	if (i>=MAX_RETRY)
 		return -1;
-	npe_reg_write(npe, IX_NPEDL_REG_OFFSET_FIFO, msg->u.data[1]);
+	npe_reg_write(npe, IX_NPEDL_REG_OFFSET_FIFO, send[1]);
 	i=0;
 	while (!(npe_reg_read(npe, IX_NPEDL_REG_OFFSET_STAT) &
 					IX_NPEMH_NPE_STAT_OFNE)) {
@@ -53,12 +56,12 @@
 	j=0;
 	while (npe_reg_read(npe, IX_NPEDL_REG_OFFSET_STAT) &
 					IX_NPEMH_NPE_STAT_OFNE) {
-		data[j&1] = npe_reg_read(npe,IX_NPEDL_REG_OFFSET_FIFO);
+		recv[j&1] = npe_reg_read(npe,IX_NPEDL_REG_OFFSET_FIFO);
 		j++;
 	}
-	if ((data[0] != msg->u.data[0]) || (data[1] != msg->u.data[1])) {
+	if ((recv[0] != send[0]) || (recv[1] != send[1])) {
 		printk("Unexpected answer: Send %08x:%08x Ret %08x:%08x\n",
-			msg->u.data[0],msg->u.data[1], data[0], data[1]);
+			send[0], send[1], recv[0], recv[1]);
 	}
 	return 0;
 }
--- linux-2.6.18.orig/drivers/net/ixp4xx/ucode_dl.c	25 Sep 2006 12:11:23 -0000	1.2
+++ linux-2.6.18/drivers/net/ixp4xx/ucode_dl.c	27 Sep 2006 07:59:35 -0000
@@ -21,7 +21,7 @@
 
 #include <linux/ixp_npe.h>
 
-#define IXNPE_VERSION "IXP4XX NPE driver Version 0.1.0"
+#define IXNPE_VERSION "IXP4XX NPE driver Version 0.1.1"
 
 #define DL_MAGIC 0xfeedf00d
 
