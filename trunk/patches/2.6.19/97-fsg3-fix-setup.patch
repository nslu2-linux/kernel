diff -Naur linux-2.6.18.orig/arch/arm/mach-ixp4xx/fsg-pci.c linux-2.6.18/arch/arm/mach-ixp4xx/fsg-pci.c
--- linux-2.6.18.orig/arch/arm/mach-ixp4xx/fsg-pci.c	2006-10-03 03:55:46.000000000 -0700
+++ linux-2.6.18/arch/arm/mach-ixp4xx/fsg-pci.c	2006-10-03 03:58:24.000000000 -0700
@@ -15,6 +15,7 @@
 #include <linux/kernel.h>
 #include <linux/pci.h>
 #include <linux/init.h>
+#include <linux/irq.h>
 
 #include <asm/mach-types.h>
 #include <asm/hardware.h>
diff -Naur linux-2.6.18.orig/arch/arm/mach-ixp4xx/fsg-setup.c linux-2.6.18/arch/arm/mach-ixp4xx/fsg-setup.c
--- linux-2.6.18.orig/arch/arm/mach-ixp4xx/fsg-setup.c	2006-10-03 03:55:46.000000000 -0700
+++ linux-2.6.18/arch/arm/mach-ixp4xx/fsg-setup.c	2006-10-03 04:02:25.000000000 -0700
@@ -118,93 +118,8 @@
 };
 #endif
 
-
-
-
-
-/*
- * When the RedBoot config partition is added the MAC address is read from
- * it.
- */
-
-static struct sockaddr mac;
-static struct sockaddr mac2;
-
-static void fsg_flash_add(struct mtd_info *mtd) {
-
-	if (strcmp(mtd->name, "RedBoot config") == 0) {
-		size_t retlen;
-		int err;
-
-		/* the mac addr is at a known offset */
-		/* 0x422 for port 0 */
-		/* 0x43b for port 1 */
-
-		err = mtd->read(mtd, 0x0422, 6, &retlen, (u8 *) &mac.sa_data);
-		if (err != 0 || retlen != 6)
-			printk(KERN_ERR "fsg: mac addr port 0 read failed\n");
-
-		err = mtd->read(mtd, 0x043b, 6, &retlen, (u8 *) &mac2.sa_data);
-		if (err != 0 || retlen != 6)
-			printk(KERN_ERR "fsg: mac addr port 1 read failed\n");
-	}
-}
-
-static void fsg_flash_remove(struct mtd_info *mtd) {
-}
-
-static struct mtd_notifier fsg_flash_notifier = {
-	.add = fsg_flash_add,
-	.remove = fsg_flash_remove,
-};
-
-static int fsg_netdev_event(struct notifier_block *this,
-				unsigned long event, void *ptr)
-{
-        
-struct net_device *dev = ptr;
-
-	/* identify the ixp4xx eth by mac 00:02:b3:xx:xx:xx */
-	if (dev->dev_addr[0] != 0x00 || dev->dev_addr[1] != 0x02 || dev->dev_addr[2] != 0xB3)
-		return NOTIFY_DONE;
-
-	/* 00:02:b3:01:01:01 = port 0 */
-	if (dev->dev_addr[3] == 0x01 || dev->dev_addr[4] == 0x01 || dev->dev_addr[5] == 0x01)
-		if (event == NETDEV_REGISTER && is_valid_ether_addr(mac.sa_data)) {
-			mac.sa_family = dev->type;
-			dev_set_mac_address(dev, &mac);
-			printk(KERN_INFO
-				"ixp400_eth: MAC address now set to %.2x:%.2x:%.2x:%.2x:%.2x:%.2x for port 0\n",
-				mac.sa_data[0], mac.sa_data[1], mac.sa_data[2],
-				mac.sa_data[3], mac.sa_data[4], mac.sa_data[5]);
-		}
-
-	/* 00:02:b3:02:02:02 = port 1 */
-	if (dev->dev_addr[3] == 0x02 || dev->dev_addr[4] == 0x02 || dev->dev_addr[5] == 0x02)
-		if (event == NETDEV_REGISTER && is_valid_ether_addr(mac2.sa_data)) {
-			mac2.sa_family = dev->type;
-			dev_set_mac_address(dev, &mac2);
-			printk(KERN_INFO
-				"ixp400_eth: MAC address now set to %.2x:%.2x:%.2x:%.2x:%.2x:%.2x for port 1\n",
-				mac2.sa_data[0], mac2.sa_data[1], mac2.sa_data[2],
-				mac2.sa_data[3], mac2.sa_data[4], mac2.sa_data[5]);
-		}
-
-	return NOTIFY_DONE;
-}
-
-static struct notifier_block fsg_netdev_notifier = {
-	.notifier_call = fsg_netdev_event,
-};
-
 static void __init fsg_init(void)
 {
-	/* The flash has an ethernet MAC embedded in it which we need,
-	 * that is all this notifier does.
-	 */
-	register_mtd_user(&fsg_flash_notifier);
-	register_netdevice_notifier(&fsg_netdev_notifier);
-
 	ixp4xx_sys_init();
 
 
